{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","BOARD","Array","fill","map","a","obj","Square","className","onClick","props","handleClick","x","y","this","value","React","Component","Board","state","squares","s","xIsNext","bind","i","j","checkVertical","console","log","checkHorizontal","checkDiagonal","calculateWinner","setState","key","toString","item","renderSquare","status","winner","replay","renderRow","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4870c46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst SIZE = 20;\nconst BOARD = Array(SIZE).fill(null).map(a => {\n  return Array(SIZE).fill(null);\n});\nconst obj = {\n  'X': 'O',\n  'O': 'X'\n}\n\n\nclass Square extends React.Component {\n  render() {\n    return (\n      <button className=\"square\"\n        onClick={() => this.props.handleClick(this.props.x, this.props.y)}\n      >\n        {this.props.value}\n      </button>\n    )\n  }\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: BOARD.map(s => [...s]),\n      xIsNext: true,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  calculateWinner(squares) {\n    for (let i = 0; i < SIZE; i++) {\n      for (let j = 0; j < SIZE; j++) {\n        if (this.checkVertical(squares, i, j)) {\n          console.log(\"checkVertical\")\n          return squares[i][j]\n        }\n\n        if (this.checkHorizontal(squares, i, j)) {\n          console.log(\"checkHorizontal\")\n          return squares[i][j]\n        }\n\n        if (this.checkDiagonal(squares, i, j)) {\n          console.log(\"checkDiagonal\");\n          return squares[i][j];\n        }\n\n      }\n    }\n\n    return null;\n  }\n\n  checkDiagonal(squares, x, y) {\n    if (x + 4 > 20 || y + 4 > 20) return false;\n\n    if (\n      squares[x][y] !== null &&\n      squares[x][y] === squares[x + 1][y + 1] &&\n      squares[x][y] === squares[x + 2][y + 2] &&\n      squares[x][y] === squares[x + 3][y + 3] &&\n      squares[x][y] === squares[x + 4][y + 4]\n    ) {\n      let value = '' + squares[x][y];\n      if (x - 1 >= 0 && y - 1 >= 0 && x + 5 <= 19 && y + 5 <= 19 && squares[x - 1][y - 1] === obj[value] && squares[x + 5][y + 5] === obj[value])\n        return false;\n\n      return true;\n    }\n\n\n    if (x - 4 < 0) return false;\n\n    if (\n      squares[x][y] !== null &&\n      squares[x][y] === squares[x - 1][y + 1] &&\n      squares[x][y] === squares[x - 2][y + 2] &&\n      squares[x][y] === squares[x - 3][y + 3] &&\n      squares[x][y] === squares[x - 4][y + 4]\n    ) {\n      let value = '' + squares[x][y];\n      if (x - 5 >= 0 && y + 5 <= 19 && x + 1 <= 19 && y - 1 >= 0 && squares[x + 1][y - 1] === obj[value] && squares[x - 5][y + 5] === obj[value])\n        return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  checkHorizontal(squares, x, y) {\n    if (x + 4 > 20 || y + 4 > 20) return false;\n\n    if (\n      squares[x][y] !== null &&\n      squares[x][y] === squares[x][y + 1] &&\n      squares[x][y] === squares[x][y + 2] &&\n      squares[x][y] === squares[x][y + 3] &&\n      squares[x][y] === squares[x][y + 4]\n    ) {\n      let value = '' + squares[x][y];\n      if (y - 1 >= 0 && y + 5 <= 19 && squares[x][y - 1] === obj[value] && squares[x][y + 5] === obj[value])\n        return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  checkVertical(squares, x, y) {\n    if (x + 4 > 20 || y + 4 > 20) return false;\n\n    if (\n      squares[x][y] != null &&\n      squares[x][y] === squares[x + 1][y] &&\n      squares[x][y] === squares[x + 2][y] &&\n      squares[x][y] === squares[x + 3][y] &&\n      squares[x][y] === squares[x + 4][y]\n    ) {\n      let value = '' + squares[x][y];\n      if (x - 1 >= 0 && x + 5 <= 19 && squares[x - 1][y] === obj[value] && squares[x + 5][y] === obj[value])\n        return false;\n\n      return true;\n    }\n\n    return false;\n  }\n\n\n  handleClick(x, y) {\n    if (this.calculateWinner(this.state.squares) || this.state.squares[x][y]) {\n      return;\n    }\n\n    const squares = this.state.squares.map(s => [...s]);\n    squares[x][y] = this.state.xIsNext ? 'X' : 'O';\n\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    })\n  }\n\n  renderSquare(x, y) {\n    return <Square handleClick={this.handleClick} value={this.state.squares[x][y]} key={x.toString() + y.toString()} x={x} y={y} />;\n  }\n\n  renderRow(x) {\n    return BOARD.map((item, key) => {\n      return this.renderSquare(x, key);\n    });\n  }\n\n  replay() {\n    this.setState({\n      squares: BOARD.map(s => [...s]),\n      xIsNext: true,\n    })\n  }\n\n\n  render() {\n    const winner = this.calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Người chiến thắng: ' + winner;\n    } else {\n      status = 'Người chơi tiếp theo: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"board\">\n        <div className=\"row\">\n          <div className=\"col-md-6\"> <h4 className=\"status\">{status}</h4> </div>\n          <div className=\"col-md-6\"> <button onClick={() => this.replay(this.props.x, this.props.y)} className=\"btn btn-success\">Chơi lại</button> </div>\n        </div>\n        {BOARD.map((item, key) => {\n          return (\n            <div className=\"wrap\" key={key}>\n              {this.renderRow(key)}\n            </div>\n          )\n        })}\n\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8 col-md-offset-2\">\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}