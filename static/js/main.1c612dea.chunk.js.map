{"version":3,"sources":["components/Square.js","components/Board.js","actions/index.js","components/Game.js","containers/GamePlay.js","components/App.js","serviceWorker.js","const.js","utils.js","reducers/index.js","index.js"],"names":["Square","active","x","y","value","handleClick","type","className","onClick","Board","props","this","squares","key","toString","map","item","renderSquare","index","renderRow","React","Component","CLICK_SQUARE","REPLAY","JUMP_TO","SORT","jumpTo","step","Game","status","game","dispatch","isWin","winInfo","xIsNext","sort","stateHistory","history","stateActive","historyStatus","move","_step","length","role","clickSquare","connect","state","App","GamePlay","Boolean","window","location","hostname","match","SIZE","BOARD","Array","fill","OBJ","X","O","checkDiagonal","checkHorizontal","checkVertical","calculateWinner","i","j","pos","activeWinner","winner","stateSquare","stateStepNumber","stepNumber","s","result","slice","push","v","initState","combineReducers","action","store","createStore","rootReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c612dea.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Square({ active, x, y, value, handleClick }) {\n  return (\n    <button type=\"button\" className={active[x][y] ? 'square active' : 'square'}\n      onClick={() => handleClick(x, y)}\n    >\n      {value}\n    </button>\n  )\n}\n","import React from 'react';\nimport Square from './Square';\n\nexport default class Board extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n  }\n\n  renderSquare(x, y) {\n    const { squares, active, onClick } = this.props;\n    return (\n      <Square\n        handleClick={onClick}\n        active={active}\n        value={squares[x][y]}\n        key={x.toString() + y.toString()}\n        x={x}\n        y={y}\n      />\n    );\n  }\n\n  renderRow(x) {\n    const { squares } = this.props;\n    return squares.map((item, key) => {\n      return this.renderSquare(x, key);\n    });\n  }\n\n  render() {\n    const { squares } = this.props;\n\n    return (\n      <div className=\"board\">\n        {squares.map((item, index) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <div className=\"wrap\" key={index}>\n              {this.renderRow(index)}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","export const CLICK_SQUARE = 'CLICK_SQUARE';\nexport const REPLAY = 'REPLAY';\nexport const JUMP_TO = 'JUMP_TO';\nexport const SORT = 'SORT';\n\nexport function clickSquare(x, y) {\n  return {\n    type: CLICK_SQUARE,\n    x,\n    y\n  };\n}\n\nexport function replay() {\n  return {\n    type: REPLAY\n  };\n}\n\nexport function sortStep() {\n  return {\n    type: SORT\n  };\n}\n\nexport function jumpTo(step) {\n  return {\n    type: JUMP_TO,\n    step\n  };\n}\n","import React from 'react';\nimport Board from './Board';\nimport { clickSquare, replay, sortStep, jumpTo } from '../actions';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class Game extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { game, dispatch } = this.props;\n    const {\n      isWin,\n      squares,\n      winInfo,\n      xIsNext,\n      sort,\n      history: stateHistory,\n      active: stateActive\n    } = game;\n    let status;\n\n    if (isWin) {\n      status = `Người chiến thắng: ${squares[winInfo.x][winInfo.y]}`;\n    } else {\n      status = `Người chơi tiếp theo: ${xIsNext ? 'X' : 'O'}`;\n    }\n\n    let history = [];\n    let historyStatus;\n\n    if (sort) {\n      history = [...stateHistory];\n\n      historyStatus = history.map((step, move) => {\n        if (move === 0)\n          return (\n            <button\n              type=\"button\"\n              // eslint-disable-next-line react/no-array-index-key\n              key={move}\n              onClick={() => dispatch(jumpTo(move))}\n              className={\n                step.active\n                  ? 'list-group-item list-group-item-action active'\n                  : 'list-group-item list-group-item-action'\n              }\n            >\n              Go to start\n            </button>\n          );\n        return (\n          <button\n            type=\"button\"\n            // eslint-disable-next-line react/no-array-index-key\n            key={move}\n            onClick={() => dispatch(jumpTo(move))}\n            className={\n              step.active\n                ? 'list-group-item list-group-item-action active'\n                : 'list-group-item list-group-item-action'\n            }\n          >\n            Go to #{move}\n          </button>\n        );\n      });\n    } else {\n      history = [...stateHistory];\n      historyStatus = history.map((_step, move) => {\n        // eslint-disable-next-line no-param-reassign\n        move = history.length - move - 1;\n        if (move === 0)\n          return (\n            <button\n              type=\"button\"\n              // eslint-disable-next-line react/no-array-index-key\n              key={move}\n              onClick={() => dispatch(jumpTo(move))}\n              className={\n                history[move].active\n                  ? 'list-group-item list-group-item-action active'\n                  : 'list-group-item list-group-item-action'\n              }\n            >\n              Go to start\n            </button>\n          );\n        return (\n          <button\n            type=\"button\"\n            // eslint-disable-next-line react/no-array-index-key\n            key={move}\n            onClick={() => dispatch(jumpTo(move))}\n            className={\n              history[move].active\n                ? 'list-group-item list-group-item-action active'\n                : 'list-group-item list-group-item-action'\n            }\n          >\n            Go to #{move}\n          </button>\n        );\n      });\n    }\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <h4>\n            Lịch sử nước đi\n            <i\n              className=\"fa fa-sort\"\n              role=\"presentation\"\n              onClick={() => dispatch(sortStep())}\n            />\n          </h4>\n          <div className=\"list-group\">{historyStatus}</div>\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"game\">\n            <div className=\"game-board\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  {' '}\n                  <h4 className=\"status\">{status}</h4>{' '}\n                </div>\n                <div className=\"col-md-6\">\n                  {' '}\n                  <button\n                    type=\"button\"\n                    onClick={() => dispatch(replay())}\n                    className=\"btn btn-success\"\n                  >\n                    Chơi lại\n                  </button>{' '}\n                </div>\n              </div>\n              <Board\n                squares={squares}\n                xIsNext={xIsNext}\n                onClick={(x, y) => dispatch(clickSquare(x, y))}\n                active={stateActive}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport Game from '../components/Game';\n\nconst mapStateToProps = state => ({\n  game:state.game\n});\n\nexport default connect(mapStateToProps)(Game);\n","import React from 'react';\nimport './App.css';\nimport GamePlay from '../containers/GamePlay';\n\nconst App = () => (\n    <div>\n      <GamePlay />\n    </div>\n);\n\nexport default App;\n","/* eslint-disable no-undef */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else if (config && config.onSuccess) {\n              config.onSuccess(registration);\n            }\n          }\n        };\n      };\n    })\n    .catch(() => {\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SIZE = 20;\nexport const BOARD = Array(SIZE)\n  .fill(null)\n  .map(() => {\n    return Array(SIZE).fill(null);\n  });\nexport const OBJ = {\n  X: 'O',\n  O: 'X'\n};\n","import { SIZE, OBJ, BOARD } from './const';\n\n// eslint-disable-next-line class-methods-use-this\nfunction checkDiagonal(squares, x, y) {\n  if (!(x - 4 < 0 || y + 4 >= 20)) {\n    if (\n      squares[x][y] !== null &&\n      squares[x][y] === squares[x - 1][y + 1] &&\n      squares[x][y] === squares[x - 2][y + 2] &&\n      squares[x][y] === squares[x - 3][y + 3] &&\n      squares[x][y] === squares[x - 4][y + 4]\n    ) {\n      const value = `${squares[x][y]}`;\n      if (\n        x - 5 >= 0 &&\n        y + 5 <= 19 &&\n        x + 1 <= 19 &&\n        y - 1 >= 0 &&\n        squares[x + 1][y - 1] === OBJ[value] &&\n        squares[x - 5][y + 5] === OBJ[value]\n      )\n        return false;\n\n      return {\n        status: true,\n        type: 1\n      };\n    }\n  }\n\n  if (!(x + 5 > 20 || y + 5 > 20)) {\n    if (\n      squares[x][y] !== null &&\n      squares[x][y] === squares[x + 1][y + 1] &&\n      squares[x][y] === squares[x + 2][y + 2] &&\n      squares[x][y] === squares[x + 3][y + 3] &&\n      squares[x][y] === squares[x + 4][y + 4]\n    ) {\n      const value = `${squares[x][y]}`;\n      if (\n        x - 1 >= 0 &&\n        y - 1 >= 0 &&\n        x + 5 <= 19 &&\n        y + 5 <= 19 &&\n        squares[x - 1][y - 1] === OBJ[value] &&\n        squares[x + 5][y + 5] === OBJ[value]\n      )\n        return false;\n\n      return {\n        status: true,\n        type: 2\n      };\n    }\n  }\n\n  return false;\n}\n\n// eslint-disable-next-line class-methods-use-this\nfunction checkHorizontal(squares, x, y) {\n  if (y + 4 >= 20) return false;\n\n  if (\n    squares[x][y] !== null &&\n    squares[x][y] === squares[x][y + 1] &&\n    squares[x][y] === squares[x][y + 2] &&\n    squares[x][y] === squares[x][y + 3] &&\n    squares[x][y] === squares[x][y + 4]\n  ) {\n    const value = `${squares[x][y]}`;\n    if (\n      y - 1 >= 0 &&\n      y + 5 <= 19 &&\n      squares[x][y - 1] === OBJ[value] &&\n      squares[x][y + 5] === OBJ[value]\n    )\n      return false;\n\n    return true;\n  }\n\n  return false;\n}\n\n// eslint-disable-next-line class-methods-use-this\nfunction checkVertical(squares, x, y) {\n  if (x + 4 >= 20) return false;\n\n  if (\n    squares[x][y] !== null &&\n    squares[x][y] === squares[x + 1][y] &&\n    squares[x][y] === squares[x + 2][y] &&\n    squares[x][y] === squares[x + 3][y] &&\n    squares[x][y] === squares[x + 4][y]\n  ) {\n    const value = `${squares[x][y]}`;\n    if (\n      x - 1 >= 0 &&\n      x + 5 <= 19 &&\n      squares[x - 1][y] === OBJ[value] &&\n      squares[x + 5][y] === OBJ[value]\n    )\n      return false;\n\n    return true;\n  }\n\n  return false;\n}\n\nexport function calculateWinner(squares) {\n  if (!squares) return null;\n\n  for (let i = 0; i < SIZE; i += 1) {\n    for (let j = 0; j < SIZE; j += 1) {\n      if (checkVertical(squares, i, j)) {\n        return {\n          pos: { i, j },\n          type: 'vertical'\n        };\n      }\n\n      if (checkHorizontal(squares, i, j)) {\n        return {\n          pos: { i, j },\n          type: 'horizontal'\n        };\n      }\n\n      if (checkDiagonal(squares, i, j)) {\n        return {\n          pos: { i, j },\n          type: 'diagonal',\n          status: checkDiagonal(squares, i, j).type\n        };\n      }\n    }\n  }\n\n  return null;\n}\n\nexport function activeWinner(winner, state) {\n  const { active: stateActive } = state;\n\n  if (winner) {\n    if (winner.type === 'vertical') {\n      const { i, j } = winner.pos;\n      const active = { ...stateActive };\n\n      active[i][j] = true;\n      active[i + 1][j] = true;\n      active[i + 2][j] = true;\n      active[i + 3][j] = true;\n      active[i + 4][j] = true;\n\n      const result = {\n        active,\n        isWin: true,\n        winInfo: { x: i, y: j }\n      };\n\n      return result;\n    }\n    if (winner.type === 'horizontal') {\n      const { i, j } = winner.pos;\n      const active = { ...stateActive };\n\n      active[i][j + 1] = true;\n      active[i][j + 2] = true;\n      active[i][j + 3] = true;\n      active[i][j + 4] = true;\n      active[i][j] = true;\n\n      const result = {\n        active,\n        isWin: true,\n        winInfo: { x: i, y: j }\n      };\n\n      return result;\n    }\n    if (winner.type === 'diagonal') {\n      if (winner.status === 2) {\n        const { i, j } = winner.pos;\n        const active = { ...stateActive };\n\n        active[i + 1][j + 1] = true;\n        active[i + 2][j + 2] = true;\n        active[i + 3][j + 3] = true;\n        active[i + 4][j + 4] = true;\n        active[i][j] = true;\n\n        const result = {\n          active,\n          isWin: true,\n          winInfo: { x: i, y: j }\n        };\n\n        return result;\n      }\n      if (winner.status === 1) {\n        const { i, j } = winner.pos;\n        const active = { ...stateActive };\n\n        active[i - 1][j + 1] = true;\n        active[i - 2][j + 2] = true;\n        active[i - 3][j + 3] = true;\n        active[i - 4][j + 4] = true;\n        active[i][j] = true;\n\n        const result = {\n          active,\n          isWin: true,\n          winInfo: { x: i, y: j }\n        };\n\n        return result;\n      }\n      return false;\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nexport function handleClick(x, y, state) {\n  const {\n    squares: stateSquare,\n    xIsNext,\n    history: stateHistory,\n    stepNumber: stateStepNumber\n  } = state;\n\n  if (calculateWinner(stateSquare) || stateSquare[x][y]) {\n    return false;\n  }\n\n  const squares = stateSquare.map(s => [...s]);\n  squares[x][y] = xIsNext ? 'X' : 'O';\n\n  const winner = calculateWinner(squares);\n  let result = activeWinner(winner, state);\n  if (!result) result = { active: BOARD.map(s => [...s]) };\n  const history = stateHistory.slice(0, stateStepNumber + 1);\n  history.push({ x, y });\n\n  return {\n    ...state,\n    ...result,\n    ...{\n      squares,\n      xIsNext: !xIsNext,\n      history,\n      stepNumber: stateStepNumber + 1\n    }\n  };\n}\n\nexport function jumpTo(step, state) {\n  const { history: stateHistory } = state;\n  const squares = BOARD.map(s => [...s]);\n  for (let i = 1; i <= step; i += 1) {\n    squares[stateHistory[i].x][stateHistory[i].y] = i % 2 ? 'X' : 'O';\n  }\n  let history = [...stateHistory];\n  history = history.map(v => {\n    // eslint-disable-next-line no-param-reassign\n    v.active = false;\n    return v;\n  });\n  history[step].active = true;\n\n  const winner = calculateWinner(squares);\n  let result = activeWinner(winner, state);\n  if (!result) result = { active: BOARD.map(s => [...s]) };\n\n  return {\n    stepNumber: step,\n    xIsNext: step % 2 === 0,\n    squares,\n    history,\n    ...result\n  };\n}\n\nexport function sort(state) {\n  const { sort: sortParams } = state;\n  if (sortParams) {\n    return { sort: false };\n  }\n  return { sort: true };\n}\n","import { combineReducers } from 'redux';\nimport { BOARD } from '../const';\nimport { CLICK_SQUARE, REPLAY, SORT, JUMP_TO } from '../actions';\nimport { handleClick, sort, jumpTo } from '../utils';\n\nconst initState = {\n  history: [{}],\n  squares: BOARD.map(s => [...s]),\n  xIsNext: true,\n  isWin: false,\n  winInfo: {},\n  active: BOARD.map(s => [...s]),\n  stepNumber: 0,\n  sort: true\n};\n\nconst game = (state = initState, action) => {\n  switch (action.type) {\n    case CLICK_SQUARE: {\n      const result = handleClick(action.x, action.y, state);\n      if (result) return result;\n      return state;\n    }\n    case REPLAY:\n      return { ...initState };\n    case SORT: {\n      const result = sort(state);\n      if (result) return { ...state, ...result };\n      return state;\n    }\n    case JUMP_TO: {\n      const result = jumpTo(action.step, state);\n      return { ...state, ...result };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  game\n});\n","import { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}